/* Build grid */

.jcse{
  justify-content: space-evenly;
}


@mixin grid-set-col($noofcolum, $frsize) {
  grid-template-columns: repeat($noofcolum, $frsize);
}

@mixin grid-col-span($num) {
  grid-column: span $num;
}

@mixin grid-row-span($num) {
  grid-row: span $num;
}

.grid {
  display: grid;
}

@mixin grid-mixin($num, $limit) {

    
  @for $i from 0 through $limit {
    .grid-col-#{$i} {
      @include grid-set-col($i, 1fr);
    }

    .grid-col-span-#{$i} {
      @include grid-col-span($i);
    }

    .grid-row-span-#{$i} {
      @include grid-row-span($i);
    }
  }

  @include xl {
    @for $i from 0 through $limit {
      .grid-col-#{$i}-#{xl} {
        @include grid-set-col($i, 1fr);
      }

      .grid-col-span-#{$i}-#{xl} {
        @include grid-col-span($i);
      }

      .grid-row-span-#{$i}-#{xl} {
        @include grid-row-span($i);
      }
    }
  }

  @include lg {
    @for $i from 0 through $limit {
      .grid-col-#{$i}-#{lg} {
        @include grid-set-col($i, 1fr);
      }

      .grid-col-span-#{$i}-#{lg} {
        @include grid-col-span($i);
      }

      .grid-row-span-#{$i}-#{lg} {
        @include grid-row-span($i);
      }
    }
  }

  @include xmd {
    @for $i from 0 through $limit {
      .grid-col-#{$i}-#{xmd} {
        @include grid-set-col($i, 1fr);
      }

      .grid-col-span-#{$i}-#{xmd} {
        @include grid-col-span($i);
      }

      .grid-row-span-#{$i}-#{xmd} {
        @include grid-row-span($i);
      }
    }
  }

  @include md {
    @for $i from 0 through $limit {
      .grid-col-#{$i}-#{md} {
        @include grid-set-col($i, 1fr);
      }

      .grid-col-span-#{$i}-#{md} {
        @include grid-col-span($i);
      }

      .grid-row-span-#{$i}-#{md} {
        @include grid-row-span($i);
      }
    }
  }

  @include sm {
    @for $i from 0 through $limit {
      .grid-col-#{$i}-#{sm} {
        @include grid-set-col($i, 1fr);
      }

      .grid-col-span-#{$i}-#{sm} {
        @include grid-col-span($i);
      }

      .grid-row-span-#{$i}-#{sm} {
        @include grid-row-span($i);
      }
    }
  }

  @include xs {
    @for $i from 0 through $limit {
      .grid-col-#{$i}-#{xs} {
        @include grid-set-col($i, 1fr);
      }

      .grid-col-span-#{$i}-#{xs} {
        @include grid-col-span($i);
      }

      .grid-row-span-#{$i}-#{xs} {
        @include grid-row-span($i);
      }
    }
  }

  @include xxs {
    @for $i from 0 through $limit {
      .grid-col-#{$i}-#{xxs} {
        @include grid-set-col($i, 1fr);
      }

      .grid-col-span-#{$i}-#{xxs} {
        @include grid-col-span($i);
      }

      .grid-row-span-#{$i}-#{xxs} {
        @include grid-row-span($i);
      }
    }
  }
}

@include grid-mixin(0, 12);

//   Calculation

// $val: #{$num * $i};
// $cal: #{($num * $i) / 10}rem;

// /* GRID SYSTEM */
// @use "sass:math";

// $grid-columns: 12;
// $grid-gaps: (
//   "0": 0,
//   "10": 10px,
//   "20": 20px,
//   "30": 30px,
// );

// $grid-properties-jc: (
//   "jcfs": flex-start,
//   "jcfe": flex-end,
//   "jcsb": space-between,
//   "jcsa": space-around,
//   "jcse": space-evenly,
//   "jcc": center,
// );

// $grid-properties-ai: (
//   "aifs": flex-start,
//   "aife": flex-end,
//   "aic": center,
// );

// /* Grid Gaps */
// @each $key, $val in $grid-gaps {
//   .gap-#{$key} > * {
//     padding: $val;
//   }
//   .gap-#{$key} {
//     margin-left: -$val;
//     margin-right: -$val;
//   }
// }

// // Row
// .rw {
//   display: flex;
//   flex-flow: row wrap;
// }

// .flx{
//   display: flex;
// }

// // Coloum

// @for $i from 1 through $grid-columns {
//   .col-#{$i} {
//     box-sizing: border-box;
//     flex-grow: 0;
//     width: math.div($i * 100%, $grid-columns);
//   }
// }

// @include xl {
//   @for $i from 1 through $grid-columns {
//     .col-#{$i}-xl {
//       box-sizing: border-box;
//       flex-grow: 0;
//       width: math.div($i * 100%, $grid-columns);
//     }
//   }
// }

// @include lg {
//   @for $i from 1 through $grid-columns {
//     .col-#{$i}-lg {
//       box-sizing: border-box;
//       flex-grow: 0;
//       width: math.div($i * 100%, $grid-columns);
//     }
//   }
// }

// @include md {
//   @for $i from 1 through $grid-columns {
//     .col-#{$i}-md {
//       box-sizing: border-box;
//       flex-grow: 0;
//       width: math.div($i * 100%, $grid-columns);
//     }
//   }
// }

// @include sm {
//   @for $i from 1 through $grid-columns {
//     .col-#{$i}-sm {
//       box-sizing: border-box;
//       flex-grow: 0;
//       width: math.div($i * 100%, $grid-columns);
//     }
//   }
// }

// // Properties
// /* Justify Content */
// @each $key, $val in $grid-properties-jc {
//   .#{$key} {
//     justify-content: $val;
//   }
// }

// /* align Items */
// @each $key, $val in $grid-properties-ai {
//   .#{$key} {
//     align-items: $val;
//   }
// }

// // Widths
// /* Padding */
// @each $key, $val in $widths {
//   .#{$key} {
//     width: $val;
//   }

//   @include lg{

//   }

//   @include md{

//     .md-#{$key} {
//       width: $val;
//     }

//   }

// }

// // Heights

// .h100{
//   height: 100%;
// }

// .h50{
//   height: 55%;
// }

// .pt1{
//   padding-top: 1rem !important;
// }

// .aise {
//   align-self: flex-end;
// }
